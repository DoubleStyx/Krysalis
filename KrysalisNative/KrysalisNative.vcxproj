<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="KrysalisNative.h" />
    <ClInclude Include="SceneBuilder.h" />
    <ClInclude Include="Utils.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="KrysalisNative.cpp" />
    <ClCompile Include="SceneBuilder.cpp" />
    <ClCompile Include="Utils.cpp" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>20.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{764e4e20-0feb-4846-8841-6ddf2c70dac8}</ProjectGuid>
    <RootNamespace>KrysalisNative</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
    <PrecompiledHeader>$(PrecompiledHeaderOption)</PrecompiledHeader>
    <AdditionalOptions>/std:c++20 %(AdditionalOptions)</AdditionalOptions>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v143</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PrecompiledHeader>$(PrecompiledHeaderOption)</PrecompiledHeader>
    <AdditionalOptions>/std:c++20 %(AdditionalOptions)</AdditionalOptions>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <PropertyGroup>
    <ExternalIncludeDir>$(MSBuildThisFileDirectory)..\external\include</ExternalIncludeDir>
    <VulkanIncludeDir>C:\VulkanSDK\1.3.290.0\Include</VulkanIncludeDir>
    <VulkanLibDir>C:\VulkanSDK\1.3.290.0\Lib</VulkanLibDir>
    <FilamentIncludeDir>C:\Libraries\filament-windows\include</FilamentIncludeDir>
    <FilamentLibDirDebug>C:\Libraries\filament-windows\lib\x86_64\mdd</FilamentLibDirDebug>
    <FilamentLibDirRelease>C:\Libraries\filament-windows\lib\x86_64\md</FilamentLibDirRelease>
    <GLFWIncludeDir>C:\Libraries\glfw-3.4.bin.WIN64\include</GLFWIncludeDir>
    <GLFWLibDir>C:\Libraries\glfw-3.4.bin.WIN64\lib-vc2022</GLFWLibDir>
    <CommonIncludeDirs>$(ExternalIncludeDir);$(VulkanIncludeDir);$(FilamentIncludeDir);$(GLFWIncludeDir)</CommonIncludeDirs>
    <CommonLibDirs>$(VulkanLibDir);$(GLFWLibDir)</CommonLibDirs>
    <CommonDependencies>Shlwapi.lib;glfw3.lib;dxcompiler.lib;GenericCodeGen.lib;glslang-default-resource-limits.lib;glslang.lib;MachineIndependent.lib;OSDependent.lib;shaderc.lib;shaderc_combined.lib;shaderc_shared.lib;shaderc_util.lib;spirv-cross-c-shared.lib;spirv-cross-c.lib;spirv-cross-core.lib;spirv-cross-cpp.lib;spirv-cross-glsl.lib;spirv-cross-hlsl.lib;spirv-cross-msl.lib;spirv-cross-reflect.lib;spirv-cross-util.lib;SPIRV-Tools-diff.lib;SPIRV-Tools-link.lib;SPIRV-Tools-lint.lib;SPIRV-Tools-opt.lib;SPIRV-Tools-reduce.lib;SPIRV-Tools-shared.lib;SPIRV-Tools.lib;SPIRV.lib;SPVRemapper.lib;vulkan-1.lib;opengl32.lib;backend.lib;basis_transcoder.lib;bluegl.lib;bluevk.lib;camutils.lib;civetweb.lib;dracodec.lib;filabridge.lib;filaflat.lib;filamat.lib;filament-iblprefilter.lib;filament.lib;filameshio.lib;geometry.lib;gltfio.lib;gltfio_core.lib;ibl-lite.lib;ibl.lib;image.lib;ktxreader.lib;matdbg.lib;meshoptimizer.lib;mikktspace.lib;shaders.lib;smol-v.lib;stb.lib;uberarchive.lib;uberzlib.lib;utils.lib;viewer.lib;vkshaders.lib;zstd.lib;</CommonDependencies>
    <CommonCppStandard>stdcpp20</CommonCppStandard>
    <CommonOptions>/ignore:4099</CommonOptions>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(CommonIncludeDirs);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>$(CommonCppStandard)</LanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(CommonLibDirs);$(FilamentLibDirDebug);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(CommonDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(CommonOptions) %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>$(CommonIncludeDirs);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <LanguageStandard>$(CommonCppStandard)</LanguageStandard>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(CommonLibDirs);$(FilamentLibDirRelease);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>$(CommonDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(CommonOptions) %(AdditionalOptions)</AdditionalOptions>
    </Link>
  </ItemDefinitionGroup>
  <PropertyGroup>
    <CopyToMods Condition="'$(CopyToMods)'==''">true</CopyToMods>
  </PropertyGroup>
  <PropertyGroup Condition="'$(ResonitePath)'==''">
    <ResonitePath Condition="Exists('C:\Program Files (x86)\Steam\steamapps\common\Resonite\')">C:\Program Files (x86)\Steam\steamapps\common\Resonite\</ResonitePath>
    <ResonitePath Condition="Exists('$(HOME)/.steam/steam/steamapps/common/Resonite/')">$(HOME)/.steam/steam/steamapps/common/Resonite/</ResonitePath>
    <ResonitePath Condition="'$(ResonitePath)'==''">$(MSBuildThisFileDirectory)Resonite/</ResonitePath>
  </PropertyGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="'$(CopyToMods)'=='true'">
    <Message Text="Attempting to copy $(TargetFileName) to $(ResonitePath)rml_mods\Krysalis" Importance="high" />
    <Copy SourceFiles="$(TargetDir)$(TargetFileName)" DestinationFolder="$(ResonitePath)rml_mods\Krysalis" ContinueOnError="true" />
  </Target>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\tencent.rapidjson.1.1.1\build\tencent.rapidjson.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\tencent.rapidjson.1.1.1\build\tencent.rapidjson.targets'))" />
  </Target>
  <Import Project="..\packages\tencent.rapidjson.1.1.1\build\tencent.rapidjson.targets" Condition="Exists('..\packages\tencent.rapidjson.1.1.1\build\tencent.rapidjson.targets')" />
</Project>