name: Build, Test, and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build, Test, and Release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Vulkan SDK
        id: cache-vulkan-sdk
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/VulkanSDK
          key: vulkan-sdk-${{ runner.os }}-1.3.283.0-cache
          restore-keys: |
            vulkan-sdk-${{ runner.os }}-

      - name: Setup Vulkan SDK
        if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
        uses: NcStudios/VulkanCI@v1.0
        with:
          sdkVersion: 1.3.283.0
          installPath: ${{ github.workspace }}/VulkanSDK

      - name: Run Python build and test script
        run: python -u Krysalis.py

      - name: Create artifact zip
        run: |
          $krysalisManagedPath = "KrysalisManaged\bin\Release\netstandard2.0\KrysalisManaged.dll"
          $krysalisNativePath = "KrysalisNative\target\release\KrysalisNative.dll"
          $krysalisPath = "Krysalis\bin\Release\netstandard2.0\Krysalis.dll"
          $artifactDir = "artifact"

          New-Item -ItemType Directory -Path "$artifactDir" -Force
          New-Item -ItemType Directory -Path "$artifactDir\Krysalis" -Force

          Copy-Item -Path $krysalisManagedPath -Destination "$artifactDir\Krysalis\KrysalisManaged.dll" -Force
          Copy-Item -Path $krysalisNativePath -Destination "$artifactDir\Krysalis\KrysalisNative.dll" -Force
          Copy-Item -Path $krysalisPath -Destination "$artifactDir\Krysalis.dll" -Force

          Compress-Archive -Path "artifact\*" -DestinationPath "Krysalis-v${{ github.run_number }}.zip"
        shell: pwsh

      - name: Upload artifact to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: Krysalis-v${{ github.run_number }}
          path: Krysalis-v${{ github.run_number }}.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Krysalis-v${{ github.run_number }}
          release_name: Krysalis-v${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: .\Krysalis-v${{ github.run_number }}.zip
          asset_name: Krysalis-v${{ github.run_number }}.zip
          asset_content_type: application/zip
