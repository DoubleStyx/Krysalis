name: Build, Test, and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build, Test, and Release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Rust dependencies and intermediate files
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Cache .NET dependencies and intermediate files
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Cache Vulkan SDK
        id: cache-vulkan-sdk
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/VulkanSDK
          key: vulkan-sdk-${{ runner.os }}-1.3.283.0-8b9387d9
          restore-keys: |
            vulkan-sdk-${{ runner.os }}-
            vulkan-sdk-

      - name: Setup Vulkan SDK
        if: steps.cache-vulkan-sdk.outputs.cache-hit != 'true'
        uses: NcStudios/VulkanCI@v1.0
        with:
          sdkVersion: 1.3.283.0

      - name: Run Python build and test script
        run: python -u Krysalis.py

      - name: Prepare artifact structure
        run: |
          mkdir -p artifact/Krysalis
          cp KrysalisManaged/bin/Release/netstandard2.0/KrysalisManaged.dll artifact/Krysalis/KrysalisManaged.dll
          cp KrysalisNative/target/release/KrysalisNative.dll artifact/Krysalis/KrysalisNative.dll
          cp Krysalis/bin/Release/netstandard2.0/Krysalis.dll artifact/Krysalis.dll
      
      - name: Upload .NET and Rust artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Krysalis
          path: artifact/*
