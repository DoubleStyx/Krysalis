name: Build, Test, and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build, Test, and Release
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Setup .NET Core 8.x SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Python build script
        run: python Krysalis.py

      - name: Create artifact directory structure
        run: |
          $managedPath = "${{ github.workspace }}/KrysalisManaged/bin/Release/netstandard2.0/KrysalisManaged.dll"
          $nativePath = "${{ github.workspace }}/KrysalisNative/target/release/KrysalisNative.dll"
          $krysalisPath = "${{ github.workspace }}/Krysalis/bin/Release/netstandard2.0/Krysalis.dll"
          $artifactDir = "${{ github.workspace }}/artifact/Krysalis"

          New-Item -ItemType Directory -Path "$artifactDir" -Force

          Copy-Item -Path $managedPath -Destination "$artifactDir/Krysalis/KrysalisManaged.dll" -Force
          Copy-Item -Path $nativePath -Destination "$artifactDir/Krysalis/KrysalisNative.dll" -Force
          Copy-Item -Path $krysalisPath -Destination "$artifactDir/Krysalis.dll" -Force
        shell: pwsh

      - name: Compress artifact directory into ZIP
        run: |
          Compress-Archive -Path "artifact/*" -DestinationPath "Krysalis-${{ github.run_number }}.zip"
        shell: pwsh

      - name: Upload artifact to GitHub Actions
        uses: actions/upload-artifact@v3
        with:
          name: Krysalis-${{ github.run_number }}
          path: Krysalis-${{ github.run_number }}.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Krysalis-${{ github.run_number }}.zip
          asset_name: Krysalis-${{ github.run_number }}.zip
          asset_content_type: application/zip
